{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","latest","setLatest","useEffect","axios","get","then","res","data","catch","err","console","log","CardDeck","Card","className","bg","text","border","style","margin","Body","Title","Text","cases","Footer","deaths","recovered","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAiEeA,MA1Df,WAAgB,IAAD,EACYC,mBAAS,IADrB,mBACNC,EADM,KACCC,EADD,KAUb,OARAC,qBAAU,WACRC,IAAMC,IAAI,iDAAiDC,MAAK,SAAAC,GAC9DL,EAAUK,EAAIC,SAEfC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEd,IAEA,8BACI,eAACG,EAAA,EAAD,WACN,eAACC,EAAA,EAAD,CAAMC,UAAU,cAAcC,GAAG,UAAUC,KAAK,QAChDC,OAAO,OAAOC,MAAO,CAACC,OAAO,QAD7B,UAEE,eAACN,EAAA,EAAKO,KAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,oBACA,cAACR,EAAA,EAAKS,KAAN,UACGtB,EAAOuB,WAGZ,cAACV,EAAA,EAAKW,OAAN,UACE,iEAGJ,eAACX,EAAA,EAAD,CAAOC,UAAU,cACjBC,GAAG,SAASC,KAAK,QACjBC,OAAO,OACPC,MAAO,CAACC,OAAO,QAHf,UAIE,eAACN,EAAA,EAAKO,KAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,oBACA,cAACR,EAAA,EAAKS,KAAN,UACCtB,EAAOyB,YAGV,cAACZ,EAAA,EAAKW,OAAN,UACE,iEAGJ,eAACX,EAAA,EAAD,CAAMC,UAAU,cAChBC,GAAG,UAAUC,KAAK,QAClBC,OAAO,OAAQC,MAAO,CAACC,OAAO,QAF9B,UAGE,eAACN,EAAA,EAAKO,KAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,oBACA,cAACR,EAAA,EAAKS,KAAN,UACCtB,EAAO0B,eAGV,cAACb,EAAA,EAAKW,OAAN,UACE,uEC5CSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f64afca7.chunk.js","sourcesContent":["import React,{ useEffect , useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\n\nfunction App() {\n  const [latest,setLatest]=useState(\"\"); \n  useEffect(()=>{\n    axios.get('https://coronavirus-19-api.herokuapp.com/all ').then(res=>{\n      setLatest(res.data);\n    })\n    .catch(err=>{\n      console.log(err);\n    });\n  },[])\n  return (\n    <div >\n        <CardDeck>\n  <Card className='text-center' bg='warning' text='white'\n  border=\"dark\" style={{margin:'10px'}}  >\n    <Card.Body>\n      <Card.Title>Cases</Card.Title>\n      <Card.Text>\n        {latest.cases}\n      </Card.Text>\n    </Card.Body>\n    <Card.Footer>\n      <small>Last updated 3 mins ago</small>\n    </Card.Footer>\n  </Card>\n  <Card  className='text-center'\n  bg='danger' text='white'\n  border=\"dark\" \n  style={{margin:'10px'}} >\n    <Card.Body>\n      <Card.Title>Cases</Card.Title>\n      <Card.Text>\n      {latest.deaths}\n      </Card.Text>\n    </Card.Body>\n    <Card.Footer>\n      <small>Last updated 3 mins ago</small>\n    </Card.Footer>\n  </Card>\n  <Card className='text-center'\n  bg='success' text='white'\n  border=\"dark\"  style={{margin:'10px'}} >\n    <Card.Body>\n      <Card.Title>Cases</Card.Title>\n      <Card.Text>\n      {latest.recovered}\n      </Card.Text>\n    </Card.Body>\n    <Card.Footer>\n      <small>Last updated 3 mins ago</small>\n    </Card.Footer>\n  </Card>\n  \n</CardDeck>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}