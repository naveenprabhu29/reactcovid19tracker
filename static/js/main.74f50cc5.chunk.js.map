{"version":3,"sources":["pages/Home.js","foot.js","pages/About.js","Nav.js","pages/Graph.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","latest","setLatest","result","setResult","searchRes","setSearchRes","loading","setLoading","useEffect","ReactGA","initialize","pageview","window","location","pathname","search","axios","all","get","then","res","data","catch","err","console","log","countries","filter","e","country","toLowerCase","includes","map","i","Card","className","bg","text","border","style","margin","Img","variant","src","countryInfo","flag","height","Body","Title","Text","cases","deaths","recovered","todayCases","todayDeaths","active","critical","lastUpdated","Date","parseInt","updated","toLocaleString","display","justifyContent","size","color","textAlign","CardDeck","thousandSeparator","displayType","value","Footer","thousandsGroupStyle","Form","Group","controlId","width","marginLeft","Control","type","placeholder","onChange","target","onClick","event","category","action","label","queries","columns","query","Foot","About","Nav","to","textDecoration","Graph","options","chart","dataLabels","enabled","stroke","curve","xaxis","categories","tooltip","x","format","series","name","App","Switch","path","exact","component","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74f50cc5.chunk.js","sourcesContent":["import React,{ useEffect , useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n\r\nimport Columns from 'react-columns';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ReactGA from 'react-ga';\r\nimport NumberFormat from 'react-number-format';\r\nimport { BeatLoader } from 'react-spinners';\r\n\r\n\r\n\r\nfunction Home() {\r\n  const [latest,setLatest]=useState([]); \r\n  const [result,setResult]=useState([]);\r\n  const [searchRes,setSearchRes]=useState(\"\");\r\n  const [loading,setLoading]=useState(true);\r\n  useEffect(()=>{\r\n\r\n    ReactGA.initialize('UA-182816809-1'); \r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n    axios.all([\r\n        axios.get('https://corona.lmao.ninja/v2/all'),\r\n        axios.get('https://corona.lmao.ninja/v2/countries')\r\n\r\n      ]).then(res=>{\r\n      setLatest(res[0].data);\r\n      setResult(res[1].data);\r\n      setLoading(false);\r\n    })\r\n    .catch(err=>{\r\n      console.log(err);\r\n    });\r\n  },[])\r\n\r\n      const filterCountry=result.filter(e=>{\r\n        return searchRes !==\"\" ?e.country.toLowerCase().includes(searchRes.toLowerCase()):e;\r\n      })\r\n  const countries=filterCountry.map((data,i)=>{\r\n    return(\r\n     \r\n      <Card key={i} className='text-center' bg='secondary' text='white'\r\n  border=\"dark\" style={{margin:'10px'}}  >\r\n    <Card.Img variant=\"top\" src={data.countryInfo.flag} style={{height:'300px'}}/>\r\n    <Card.Body>\r\n    <Card.Title>{data.country}</Card.Title>\r\n      <Card.Text>\r\n        Cases    {data.cases}\r\n              \r\n      </Card.Text>\r\n      <Card.Text> Deaths   {data.deaths}</Card.Text>\r\n      <Card.Text> Recovered {data.recovered}</Card.Text>\r\n      <Card.Text> TodayCases {data.todayCases}</Card.Text>\r\n      <Card.Text> TodayDeaths {data.todayDeaths}</Card.Text>\r\n      <Card.Text>Active {data.active}</Card.Text>\r\n      <Card.Text>Critical {data.critical}</Card.Text>\r\n    </Card.Body>\r\n    \r\n  </Card>\r\n    )\r\n  });\r\n  const timer=new Date(parseInt(latest.updated));\r\n  const lastUpdated=timer.toLocaleString();\r\n\r\n    var queries = [{\r\n    columns: 2,\r\n    query: 'min-width: 500px'\r\n  }, {\r\n    columns: 3,\r\n    query: 'min-width: 1000px'\r\n  }];\r\n\r\n\r\n\r\nconst HandleSearchBar = () =>{\r\n  ReactGA.event({\r\n    category:'Search bar',\r\n    action:'Clicked on Search Bar',\r\n    label:'HOME_PAGE',\r\n  });\r\n  \r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div className='home-bg'>\r\n       <div  style={{display:'flex' , justifyContent:'center'}}> <BeatLoader\r\n         \r\n          size={10}\r\n          color={\"#123abc\"}\r\n          loading={loading  }\r\n        /></div>\r\n      <br/>\r\n               <h3 style={{textAlign:'center'}}>Covid-19 Live Stats<sub>naveenprabhu</sub></h3>\r\n      <br/>\r\n        <CardDeck>\r\n  <Card className='text-center' bg='warning' text='white'\r\n  border=\"dark\" style={{margin:'10px'}}  >\r\n    <Card.Body>\r\n      <Card.Title>Cases</Card.Title>\r\n      <Card.Text>\r\n        <NumberFormat thousandSeparator={true} displayType='text' value={latest.cases}/>\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small>Last Update <NumberFormat thousandSeparator={true}  thousandsGroupStyle='lakh' displayType='text' value={lastUpdated} /> </small>\r\n    </Card.Footer>\r\n  </Card>\r\n  <Card  className='text-center'\r\n  bg='danger' text='white'\r\n  border=\"dark\" \r\n  style={{margin:'10px'}} >\r\n    <Card.Body>\r\n      <Card.Title>Deaths</Card.Title>\r\n      <Card.Text>\r\n        <NumberFormat thousandSeparator={true} thousandsGroupStyle='lakh' displayType='text' value={latest.deaths}/>\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small>Last Update {lastUpdated} </small>\r\n    </Card.Footer>\r\n  </Card>\r\n  <Card className='text-center'\r\n  bg='success' text='white'\r\n  border=\"dark\"  style={{margin:'10px'}} >\r\n    <Card.Body>\r\n      <Card.Title>Recovered</Card.Title>\r\n      <Card.Text>\r\n <NumberFormat thousandSeparator={true} thousandsGroupStyle='lakh' displayType='text' value={latest.recovered}/>\r\n\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small>Last Update {lastUpdated}</small>\r\n    </Card.Footer>\r\n  </Card>\r\n</CardDeck><br/>\r\n  <Form>\r\n  <Form.Group controlId=\"formGroupSearch\" style={{width:'50%',marginLeft:'30%'}}>\r\n  \r\n    <Form.Control  type=\"text\" \r\n      placeholder=\"Search a Country\"\r\n      onChange={e=>setSearchRes(e.target.value)} \r\n      onClick={HandleSearchBar}/>\r\n     \r\n  </Form.Group>\r\n  \r\n</Form>\r\n<Columns queries={queries}>{countries}</Columns>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\n\r\n \r\nconst Foot=()=>{\r\n    return(\r\n      <div>\r\n        <h1>Footer</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Foot;","import React from 'react';\r\nimport Foot from '../foot';\r\n\r\n\r\nconst About=()=>{\r\n\r\n    return(\r\n        <div>\r\n            <h1>About page yet to ready</h1>\r\n            <Foot/>\r\n        </div>\r\n    )}\r\n\r\nexport default About;","import React from 'react';\r\nimport './App.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\n \r\nconst Nav=()=>{\r\n    return(\r\n      <div className='nav'>\r\n        \r\n          <Link to=\"/\"><div style={{color:'white',textDecoration:'none'}}>Home</div></Link>\r\n          <ul className='nav-links'>\r\n          <Link to=\"/about\"><div style={{color:'white',textDecoration:'none'}}>About</div></Link>\r\n          <Link to=\"/Graph\"><div style={{color:'white',textDecoration:'none'}}>Graph</div></Link>\r\n          </ul>\r\n      </div>\r\n    )\r\n}\r\nexport default Nav;","import React from 'react';\r\nimport Foot from '../foot';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport '../App.css';\r\n\r\nconst Graph=()=>{\r\n   const series= [{\r\n        name: 'Cases',\r\n        data: [31, 40, 28, 51, 42, 109, 100]\r\n      }, {\r\n        name: 'Recovered',\r\n        data: [11, 32, 45, 32, 34, 52, 41]\r\n      }\r\n      , {\r\n        name: 'Deaths',\r\n        data: [11, 32, 45, 32, 34, 59, 91]\r\n      }\r\n    \r\n    ];\r\n     const options= {\r\n        chart: {\r\n          height: 350,\r\n          type: 'line'\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          curve: 'smooth'\r\n        },\r\n        xaxis: {\r\n          type: 'datetime',\r\n          categories: [\"1/22/20\",\"2/1/20\",\r\n          \"2/15/20\",\"3/1/20\",\r\n          \"3/15/20\",\"4/1/20\",\r\n          \"4/15/20\",\"5/1/20\",\"5/7/20\"]\r\n        },\r\n        tooltip: {\r\n          x: {\r\n            format: 'dd/MM/yy'\r\n          },\r\n        },\r\n      };\r\n    \r\n    \r\n    \r\n\r\n    return(\r\n        <div>\r\n            <br/>\r\n            <h2 style={{textAlign:\"center\"}}>Global Graph</h2>\r\n            <br/> <div className='for-graph'> <ReactApexChart options={options} series={series} type=\"line\" height={350} />\r\n            </div>\r\n        </div>\r\n    )}\r\n\r\nexport default Graph;","import React from 'react';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Nav from './Nav';\nimport Graph from './pages/Graph';\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\nimport Switch from 'react-bootstrap/esm/Switch';\n\n\n\n\n\nclass App extends React.Component\n{\n  render()\n  {\n    return(\n     <Router>  <div>\n        <Nav/>\n        \n       <Switch>\n          \n            <Route path='/' exact component={Home}/>\n            <Route path='/about' component={About}/>\n            <Route path='/graph' component={Graph}/>\n        \n    </Switch>\n      \n        </div>   </Router>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n    <App />,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}